{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/chenjian/Desktop/react-gq/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n {\\n    articles {\\n      id,\\n      time,\\n      title,\\n      img,\\n      blocks{\\n        content\\n      }\\n\\n    }\\n  \\n}\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{gql}from'apollo-boost';import{Query,ApolloProvider,useQuery}from\"react-apollo\";import{ApolloClient,InMemoryCache}from\"apollo-boost\";import{createHttpLink}from\"apollo-link-http\";import{BrowserRouter as Router,Switch,Route,Link,Redirect,useRouteMatch,useParams,BrowserRouter,NavLink}from\"react-router-dom\";var QUERY_USERS=gql(_templateObject());export function Detail(){var _useParams=useParams(),articleId=_useParams.articleId;return/*#__PURE__*/React.createElement(\"h3\",null,\"Requested topic ID: \",articleId);}export function UserInfo(){// Polling: rovides near-real-time synchronization with your server\n// by causing a query to execute periodically at a specified interval\n/* const query=QUERY_USERS\n  const varibles={}\n  const p = new Promise( (resolve) => {\n    client.query({\n      query,\n      varibles,\n      \n    }).then((res) => {\n      resolve(res.data)\n    })\n  })*/var _useQuery=useQuery(QUERY_USERS),data=_useQuery.data,loading=_useQuery.loading;console.log(data);// should handle loading status\nif(loading)return/*#__PURE__*/React.createElement(\"p\",null,\"Loading...\");return data.articles.map(function(article){return/*#__PURE__*/React.createElement(\"div\",{class:\"blog_post margbot50 clearfix\",\"data-animated\":\"fadeInUp\"},/*#__PURE__*/React.createElement(\"div\",{id:\"blog1\",class:\"blog_post_img\"},/*#__PURE__*/React.createElement(\"img\",{id:\"img2\",src:\"img/blog/4.png\",alt:\"\"}),/*#__PURE__*/React.createElement(NavLink,{class:\"zoom\",to:'/detail/'+article.id})),/*#__PURE__*/React.createElement(\"div\",{class:\"blog_post_descr\"},/*#__PURE__*/React.createElement(\"div\",{class:\"blog_post_date\"},new Date(article.time).toDateString()+' | '+new Date(article.time).toLocaleTimeString()),/*#__PURE__*/React.createElement(NavLink,{class:\"blog_post_title\",to:'/detail/'+article.id},article.title),/*#__PURE__*/React.createElement(\"ul\",{class:\"blog_post_info\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"javascript:void(0);\"},\"Admin\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"javascript:void(0);\"},\"Creative\")),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"a\",{href:\"javascript:void(0);\"},\"0 Comments\"))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{class:\"blog_post_content\"},article.blocks[0].content+\" ... \"),/*#__PURE__*/React.createElement(NavLink,{class:\"read_more_btn\",to:'/detail/'+article.id},\"Read More\")));});}/*\nconst client = new ApolloClient({\n    uri: 'http://54.197.2.14/graphql/',\n});*/var client=new ApolloClient({link:createHttpLink({uri:'https://54.197.2.14:80/graphql/',headers:{'Content-Type':'application/graphql'},fetchOptions:{method:\"GET\"}}),cache:new InMemoryCache()});var App=function App(){return/*#__PURE__*/React.createElement(ApolloProvider,{client:client},/*#__PURE__*/React.createElement(BrowserRouter,null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/detail/:articleId\",component:Detail}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/list\",component:UserInfo}),/*#__PURE__*/React.createElement(Redirect,{to:\"/list\"}))),/*#__PURE__*/React.createElement(\"ul\",{id:\"sahidu\",class:\"pagination clearfix\"},/*#__PURE__*/React.createElement(\"li\",{class:\"active\"},/*#__PURE__*/React.createElement(\"a\",{href:\"javascript:void(0);\"},\"1\"))));};export default App;","map":{"version":3,"sources":["/Users/chenjian/Desktop/react-gq/src/App.js"],"names":["React","gql","Query","ApolloProvider","useQuery","ApolloClient","InMemoryCache","createHttpLink","BrowserRouter","Router","Switch","Route","Link","Redirect","useRouteMatch","useParams","NavLink","QUERY_USERS","Detail","articleId","UserInfo","data","loading","console","log","articles","map","article","id","Date","time","toDateString","toLocaleTimeString","title","blocks","content","client","link","uri","headers","fetchOptions","method","cache","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query ,ApolloProvider,useQuery} from \"react-apollo\";\nimport {ApolloClient, InMemoryCache}from \"apollo-boost\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useRouteMatch,\n  useParams,\n  BrowserRouter,\n  NavLink,\n} from \"react-router-dom\";\n\nconst QUERY_USERS = gql`\n {\n    articles {\n      id,\n      time,\n      title,\n      img,\n      blocks{\n        content\n      }\n\n    }\n  \n}`;\n\nexport  function Detail(){\n  let { articleId } = useParams();\n  return <h3>Requested topic ID: {articleId}</h3>;\n}\n\nexport function UserInfo() {\n  \n  // Polling: rovides near-real-time synchronization with your server\n  // by causing a query to execute periodically at a specified interval\n /* const query=QUERY_USERS\n  const varibles={}\n  const p = new Promise( (resolve) => {\n    client.query({\n      query,\n      varibles,\n      \n    }).then((res) => {\n      resolve(res.data)\n    })\n  })*/\n\n\n  const { data, loading } = useQuery(QUERY_USERS);\n  console.log(data)\n  // should handle loading status\n  if (loading) return <p>Loading...</p>;\n\n  return data.articles.map(   article  => (\n\n\n\n    <div class=\"blog_post margbot50 clearfix\" data-animated=\"fadeInUp\">\n    <div id=\"blog1\" class=\"blog_post_img\">\n      <img id=\"img2\" src=\"img/blog/4.png\" alt=\"\" />\n      <NavLink class=\"zoom\" to={'/detail/'+article.id}></NavLink>\n    </div>\n    <div class=\"blog_post_descr\">\n  <div class=\"blog_post_date\">{(new Date(article.time)).toDateString()+' | '+(new Date(article.time)).toLocaleTimeString()}</div>\n  <NavLink class=\"blog_post_title\"  to={'/detail/'+article.id}>{article.title}</NavLink>\n  \n          <ul class=\"blog_post_info\">\n            <li><a href=\"javascript:void(0);\" >Admin</a></li>\n            <li><a href=\"javascript:void(0);\" >Creative</a></li>\n            <li><a href=\"javascript:void(0);\" >0 Comments</a></li>\n          </ul>\n          <hr/>\n          <div class=\"blog_post_content\">{article.blocks[0].content+\" ... \"}</div>\n          <NavLink class=\"read_more_btn\" to={'/detail/'+article.id}>Read More</NavLink>\n    </div>\n</div>\n\n\n \n  ));\n}\n/*\nconst client = new ApolloClient({\n    uri: 'http://54.197.2.14/graphql/',\n});*/\n\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n        uri: 'https://54.197.2.14:80/graphql/', \n        headers: {'Content-Type': 'application/graphql'},\n        fetchOptions:{method:\"GET\"},\n        }),\n  cache:new InMemoryCache(),\n})\n\n\n\n const App = () => (\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n    <Switch>\n     <Route exact path='/detail/:articleId' component={Detail}/>\n     <Route exact path='/list' component={UserInfo}/>\n   \n        <Redirect to='/list'/>\n     </Switch>\n    </BrowserRouter>\n   \n  \n\n\n  <ul id=\"sahidu\" class=\"pagination clearfix\">\n      <li class=\"active\"><a href=\"javascript:void(0);\" >1</a></li>\n  </ul>\n\n  </ApolloProvider>\n\n);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}