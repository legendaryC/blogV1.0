{"ast":null,"code":"var _jsxFileName = \"/Users/chenjian/react-gq/src/index.js\";\nimport React from \"react\";\nimport { AppRegistry, View, StyleSheet } from \"react-native-web\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst client = new ApolloClient({\n  uri: \"http://54.197.2.14/graphql\"\n});\nconst ExchangeRateQuery = gql`\nquery getActors {\n   actors {\n    id\n    name\n  }\n}\n`;\nexport const ExchangeRates = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ExchangeRateQuery);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }\n  }, \"Error :(\");\n  return data.actors.map(actor => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, actor.name));\n};\n\nconst App = () => /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n});\n\nAppRegistry.registerComponent(\"App\", () => App);\nAppRegistry.runApplication(\"App\", {\n  rootTag: document.getElementById(\"root\")\n});","map":{"version":3,"sources":["/Users/chenjian/react-gq/src/index.js"],"names":["React","AppRegistry","View","StyleSheet","ApolloClient","ApolloProvider","useQuery","gql","client","uri","ExchangeRateQuery","ExchangeRates","loading","error","data","actors","map","actor","name","App","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,UAA5B,QAA8C,kBAA9C;AAEA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAMA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BK,EAAAA,GAAG,EAAC;AAD0B,CAAjB,CAAf;AAIA,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;CAA9B;AASA,OAAO,MAAOI,aAAa,GAAE,MAAK;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACI,iBAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACd,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACC,MAAL,CAAYC,GAAZ,CACJC,KAAD,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,IADT,CAFK,CAAP;AAOA,CAZM;;AAcP,MAAMC,GAAG,GAAG,mBACV,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEX,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAUAP,WAAW,CAACmB,iBAAZ,CAA8B,KAA9B,EAAqC,MAAMD,GAA3C;AACAlB,WAAW,CAACoB,cAAZ,CAA2B,KAA3B,EAAkC;AAAEC,EAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB;AAAX,CAAlC","sourcesContent":["import React from \"react\";\nimport { AppRegistry, View, StyleSheet } from \"react-native-web\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider,useQuery } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n\n\n\n\nconst client = new ApolloClient({\n  uri:\"http://54.197.2.14/graphql\"\n});\n\nconst ExchangeRateQuery = gql`\nquery getActors {\n   actors {\n    id\n    name\n  }\n}\n`;\n\nexport const  ExchangeRates =()=> {\n  const { loading, error, data } = useQuery(ExchangeRateQuery);\n  if (loading) return <p>Loading...</p>;\n if (error) return <p>Error :(</p>;\n\n return data.actors.map(\n   (actor) => (\n   <div >\n     {actor.name}\n   </div>\n )\n);\n}\n\nconst App = () => (\n  <ApolloProvider client={client}>\n  {\n\n\n  }\n  </ApolloProvider>\n);\n\n\nAppRegistry.registerComponent(\"App\", () => App);\nAppRegistry.runApplication(\"App\", { rootTag: document.getElementById(\"root\") });\n"]},"metadata":{},"sourceType":"module"}