{"ast":null,"code":"var _jsxFileName = \"/Users/chenjian/react-gq/src/index.js\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nimport { View, ActivityIndicator, StyleSheet, Text, TouchableOpacity } from \"react-native-web\";\nconst client = new ApolloClient({\n  uri: \"http://54.197.2.14/graphql\"\n});\nconst ExchangeRateQuery = gql`\nquery getActors {\n   actors {\n    id\n    name\n  }\n}\n`;\nexport const ExchangeRates = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ExchangeRateQuery);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }\n  }, \"Error :(\");\n  return data.actors.map(actor => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 100,\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, actor.name));\n};\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }\n}, ExchangeRates())), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/chenjian/react-gq/src/index.js"],"names":["ReactDOM","serviceWorker","React","ApolloClient","ApolloProvider","useQuery","gql","View","ActivityIndicator","StyleSheet","Text","TouchableOpacity","client","uri","ExchangeRateQuery","ExchangeRates","loading","error","data","actors","map","actor","width","height","name","render","document","getElementById","unregister"],"mappings":";AACA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAAQC,cAAR,EAAuBC,QAAvB,QAAsC,qBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SACEC,IADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,gBALF,QAMO,kBANP;AAQA,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BU,EAAAA,GAAG,EAAC;AAD0B,CAAjB,CAAf;AAIA,MAAMC,iBAAiB,GAAGR,GAAI;;;;;;;CAA9B;AAQA,OAAO,MAAOS,aAAa,GAAE,MAAK;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACS,iBAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACd,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACC,MAAL,CAAYC,GAAZ,CACJC,KAAD,iBACA;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,GAAP;AAAWC,MAAAA,MAAM,EAAC;AAAlB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,IADT,CAFK,CAAP;AAOA,CAZM;AAgBPxB,QAAQ,CAACyB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEb,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEFG,aAAa,EAFX,CADR,CADF,EAeEW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAfF,E,CAkBA;AACA;AACA;;AACA1B,aAAa,CAAC2B,UAAd","sourcesContent":["\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport {ApolloProvider,useQuery} from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\n\nimport {\n  View,\n  ActivityIndicator,\n  StyleSheet,\n  Text,\n  TouchableOpacity\n} from \"react-native-web\";\n\nconst client = new ApolloClient({\n  uri:\"http://54.197.2.14/graphql\"\n});\n\nconst ExchangeRateQuery = gql`\nquery getActors {\n   actors {\n    id\n    name\n  }\n}\n`;\nexport const  ExchangeRates =()=> {\n  const { loading, error, data } = useQuery(ExchangeRateQuery);\n  if (loading) return <p>Loading...</p>;\n if (error) return <p>Error :(</p>;\n\n return data.actors.map(\n   (actor) => (\n   <div style={{width:100,height:100}} >\n     {actor.name}\n   </div>\n )\n);\n}\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n          <ApolloProvider client={client}>\n        {\n        ExchangeRates()\n\n        }\n\n\n          </ApolloProvider>\n  </React.StrictMode>\n\n\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}