{"ast":null,"code":"var _jsxFileName = \"/Users/chenjian/Desktop/react-gq/src/App.js\";\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query, ApolloProvider, useQuery } from \"react-apollo\";\nimport { ApolloClient, InMemoryCache } from \"apollo-boost\";\nimport { createHttpLink } from \"apollo-link-http\";\nconst QUERY_USERS = gql`\n {\n    articles {\n      time,\n      title,\n      img,\n      blocks{\n        content\n      }\n\n    }\n  \n}`;\nexport function UserInfo() {\n  // Polling: rovides near-real-time synchronization with your server\n  // by causing a query to execute periodically at a specified interval\n\n  /* const query=QUERY_USERS\n   const varibles={}\n   const p = new Promise( (resolve) => {\n     client.query({\n       query,\n       varibles,\n       \n     }).then((res) => {\n       resolve(res.data)\n     })\n   })*/\n  const {\n    data,\n    loading\n  } = useQuery(QUERY_USERS);\n  console.log(data); // should handle loading status\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  return data.articles.map(article => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blog_post margbot50 clearfix\",\n    \"data-animated\": \"fadeInUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"blog1\",\n    class: \"blog_post_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"img2\",\n    src: \"img/blog/4.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    class: \"zoom\",\n    href: \"./blog_detail_1.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blog_post_descr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blog_post_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"April 1 | 15:30\"), /*#__PURE__*/React.createElement(\"a\", {\n    class: \"blog_post_title\",\n    href: \"./blog_detail_1.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"A Closely Monitored Healthcare Social Network\"), /*#__PURE__*/React.createElement(\"ul\", {\n    class: \"blog_post_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"javascript:void(0);\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Admin\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"javascript:void(0);\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Creative\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"javascript:void(0);\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"0 Comments\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blog_post_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"This social network system makes communication between dfferent groups of people in healthcare more efficient and effective by ... \"), /*#__PURE__*/React.createElement(\"a\", {\n    class: \"read_more_btn\",\n    href: \"./blog_detail_1.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Read More\"))));\n}\n/*\nconst client = new ApolloClient({\n    uri: 'http://54.197.2.14/graphql/',\n});*/\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n    uri: 'https://54.197.2.14:80/graphql/',\n    headers: {\n      'Content-Type': 'application/graphql'\n    },\n    fetchOptions: {\n      method: \"GET\"\n    }\n  }),\n  cache: new InMemoryCache()\n});\n\nconst App = () => /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }\n}, \"My first Apollo app \\uD83D\\uDE80\"), /*#__PURE__*/React.createElement(UserInfo, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }\n}));\n\nexport default App;","map":{"version":3,"sources":["/Users/chenjian/Desktop/react-gq/src/App.js"],"names":["React","gql","Query","ApolloProvider","useQuery","ApolloClient","InMemoryCache","createHttpLink","QUERY_USERS","UserInfo","data","loading","console","log","articles","map","article","client","link","uri","headers","fetchOptions","method","cache","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,EAAgBC,cAAhB,EAA+BC,QAA/B,QAA8C,cAA9C;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAAyC,cAAzC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,MAAMC,WAAW,GAAGP,GAAI;;;;;;;;;;;;EAAxB;AAgBA,OAAO,SAASQ,QAAT,GAAoB;AAEzB;AACA;;AACD;;;;;;;;;;;AAaC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,QAAQ,CAACI,WAAD,CAAlC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAlByB,CAmBzB;;AACA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,SAAOD,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAqBC,OAAO,iBAEjC;AAAK,IAAA,KAAK,EAAC,8BAAX;AAA0C,qBAAc,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,KAAK,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,GAAG,EAAC,gBAAnB;AAAoC,IAAA,GAAG,EAAC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAG,IAAA,KAAK,EAAC,MAAT;AAAgB,IAAA,IAAI,EAAC,sBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,eAKA;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGE;AAAG,IAAA,KAAK,EAAC,iBAAT;AAA2B,IAAA,IAAI,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAHF,eAIE;AAAI,IAAA,KAAK,EAAC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,IAAI,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,CAHF,CAJF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2IAVF,eAWE;AAAG,IAAA,KAAK,EAAC,eAAT;AAAyB,IAAA,IAAI,EAAC,sBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CALA,CAFK,CAAP;AA2BD;AACD;;;;;AAMA,MAAMC,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC9Ba,EAAAA,IAAI,EAAEX,cAAc,CAAC;AACfY,IAAAA,GAAG,EAAE,iCADU;AAEfC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAFM;AAGfC,IAAAA,YAAY,EAAC;AAACC,MAAAA,MAAM,EAAC;AAAR;AAHE,GAAD,CADU;AAM9BC,EAAAA,KAAK,EAAC,IAAIjB,aAAJ;AANwB,CAAjB,CAAf;;AAWC,MAAMkB,GAAG,GAAG,mBACX,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,eAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CADD;;AAYD,eAAeO,GAAf","sourcesContent":["import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query ,ApolloProvider,useQuery} from \"react-apollo\";\nimport {ApolloClient, InMemoryCache}from \"apollo-boost\";\nimport { createHttpLink } from \"apollo-link-http\";\n\n\nconst QUERY_USERS = gql`\n {\n    articles {\n      time,\n      title,\n      img,\n      blocks{\n        content\n      }\n\n    }\n  \n}`;\n\n\n\nexport function UserInfo() {\n  \n  // Polling: rovides near-real-time synchronization with your server\n  // by causing a query to execute periodically at a specified interval\n /* const query=QUERY_USERS\n  const varibles={}\n  const p = new Promise( (resolve) => {\n    client.query({\n      query,\n      varibles,\n      \n    }).then((res) => {\n      resolve(res.data)\n    })\n  })*/\n\n\n  const { data, loading } = useQuery(QUERY_USERS);\n  console.log(data)\n  // should handle loading status\n  if (loading) return <p>Loading...</p>;\n\n  return data.articles.map(   article  => (\n\n    <div class=\"blog_post margbot50 clearfix\" data-animated=\"fadeInUp\">\n    <div id=\"blog1\" class=\"blog_post_img\">\n      <img id=\"img2\" src=\"img/blog/4.png\" alt=\"\" />\n      <a class=\"zoom\" href=\"./blog_detail_1.html\"></a>\n    </div>\n    <div class=\"blog_post_descr\">\n      <div class=\"blog_post_date\">April 1 | 15:30</div>\n    \n      <a class=\"blog_post_title\" href=\"./blog_detail_1.html\" >A Closely Monitored Healthcare Social Network</a>\n      <ul class=\"blog_post_info\">\n        <li><a href=\"javascript:void(0);\" >Admin</a></li>\n        <li><a href=\"javascript:void(0);\" >Creative</a></li>\n        <li><a href=\"javascript:void(0);\" >0 Comments</a></li>\n      </ul>\n      <hr/>\n      <div class=\"blog_post_content\">This social network system makes communication between dfferent groups of people in healthcare more efficient and effective by ... </div>\n      <a class=\"read_more_btn\" href=\"./blog_detail_1.html\" >Read More</a>\n    </div>\n  </div>\n\n\n\n\n \n  ));\n}\n/*\nconst client = new ApolloClient({\n    uri: 'http://54.197.2.14/graphql/',\n});*/\n\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n        uri: 'https://54.197.2.14:80/graphql/', \n        headers: {'Content-Type': 'application/graphql'},\n        fetchOptions:{method:\"GET\"},\n        }),\n  cache:new InMemoryCache(),\n})\n\n\n\n const App = () => (\n  <ApolloProvider client={client}>\n\n      <h2>My first Apollo app 🚀</h2>\n\n\n      <UserInfo/>\n\n    \n  </ApolloProvider>\n\n);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}