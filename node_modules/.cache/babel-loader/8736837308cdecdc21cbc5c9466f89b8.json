{"ast":null,"code":"var _jsxFileName = \"/Users/chenjian/Desktop/react-gq/src/App.js\";\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query, ApolloProvider, useQuery, useLazyQuery } from \"react-apollo\";\nimport { ApolloClient, InMemoryCache } from \"apollo-boost\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, BrowserRouter, NavLink } from \"react-router-dom\";\nconst QUERY_USERS = gql`\n {\n    articles {\n      id,\n      time,\n      title,\n      img,\n      blocks{\n        content\n      }\n\n    }\n  \n}`;\nconst QUERY_BLOCKS = gql`\nquery ($articleId:Int!){\n    \n      article(id:$articleId) {\n       \n        blocks{\n          tag\n          content\n        }\n  \n      }\n  \n    }\n\n`;\nexport function Detail() {\n  let {\n    articleId\n  } = useParams();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_BLOCKS, {\n    variables: {\n      articleId\n    }\n  });\n  if (loading) return null;\n  if (error) return `Error! ${error}`;\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, \"Requested topic ID: \", data.article.blocks[0].tag);\n}\nexport function UserInfo() {\n  // Polling: rovides near-real-time synchronization with your server\n  // by causing a query to execute periodically at a specified interval\n\n  /* const query=QUERY_USERS\n   const varibles={}\n   const p = new Promise( (resolve) => {\n     client.query({\n       query,\n       varibles,\n       \n     }).then((res) => {\n       resolve(res.data)\n     })\n   })*/\n  const {\n    data,\n    loading\n  } = useQuery(QUERY_USERS);\n  console.log(data); // should handle loading status\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  return data.articles.map(article => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blog_post margbot50 clearfix\",\n    \"data-animated\": \"fadeInUp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"blog1\",\n    class: \"blog_post_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"img2\",\n    src: \"img/blog/4.png\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NavLink, {\n    class: \"zoom\",\n    to: '/detail/' + article.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blog_post_descr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blog_post_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }\n  }, new Date(article.time).toDateString() + ' | ' + new Date(article.time).toLocaleTimeString()), /*#__PURE__*/React.createElement(NavLink, {\n    class: \"blog_post_title\",\n    to: '/detail/' + article.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  }, article.title), /*#__PURE__*/React.createElement(\"ul\", {\n    class: \"blog_post_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"javascript:void(0);\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Admin\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"javascript:void(0);\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Creative\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"javascript:void(0);\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"0 Comments\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"blog_post_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, article.blocks[0].content + \" ... \"), /*#__PURE__*/React.createElement(NavLink, {\n    class: \"read_more_btn\",\n    to: '/detail/' + article.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Read More\"))));\n}\n/*\nconst client = new ApolloClient({\n    uri: 'http://54.197.2.14/graphql/',\n});*/\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n    uri: 'https://54.197.2.14:80/graphql/',\n    headers: {\n      'Content-Type': 'application/graphql'\n    },\n    fetchOptions: {\n      method: \"GET\"\n    }\n  }),\n  cache: new InMemoryCache()\n});\n\nconst App = () => /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/detail/:articleId\",\n  component: Detail,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 6\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/list\",\n  component: UserInfo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 6\n  }\n}), /*#__PURE__*/React.createElement(Redirect, {\n  to: \"/list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(\"ul\", {\n  id: \"sahidu\",\n  class: \"pagination clearfix\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  class: \"active\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: \"javascript:void(0);\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 26\n  }\n}, \"1\"))));\n\nexport default App;","map":{"version":3,"sources":["/Users/chenjian/Desktop/react-gq/src/App.js"],"names":["React","gql","Query","ApolloProvider","useQuery","useLazyQuery","ApolloClient","InMemoryCache","createHttpLink","BrowserRouter","Router","Switch","Route","Link","Redirect","useRouteMatch","useParams","NavLink","QUERY_USERS","QUERY_BLOCKS","Detail","articleId","data","loading","error","variables","article","blocks","tag","UserInfo","console","log","articles","map","id","Date","time","toDateString","toLocaleTimeString","title","content","client","link","uri","headers","fetchOptions","method","cache","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query ,ApolloProvider,useQuery,useLazyQuery} from \"react-apollo\";\nimport {ApolloClient, InMemoryCache}from \"apollo-boost\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useRouteMatch,\n  useParams,\n  BrowserRouter,\n  NavLink,\n} from \"react-router-dom\";\n\nconst QUERY_USERS = gql`\n {\n    articles {\n      id,\n      time,\n      title,\n      img,\n      blocks{\n        content\n      }\n\n    }\n  \n}`;\nconst QUERY_BLOCKS=gql`\nquery ($articleId:Int!){\n    \n      article(id:$articleId) {\n       \n        blocks{\n          tag\n          content\n        }\n  \n      }\n  \n    }\n\n`;\nexport  function Detail(){\n  let { articleId } = useParams();\n  const {  data ,loading,error} = useQuery(QUERY_BLOCKS, {\n    variables: { articleId }\n  });\n  if (loading) return null;\n  if (error) return `Error! ${error}`;\n  return (\n  <h3>Requested topic ID: {data.article.blocks[0].tag}</h3>\n  );\n\n}\n\n\n\n\n\nexport function UserInfo() {\n  \n  // Polling: rovides near-real-time synchronization with your server\n  // by causing a query to execute periodically at a specified interval\n /* const query=QUERY_USERS\n  const varibles={}\n  const p = new Promise( (resolve) => {\n    client.query({\n      query,\n      varibles,\n      \n    }).then((res) => {\n      resolve(res.data)\n    })\n  })*/\n\n\n  const { data, loading } = useQuery(QUERY_USERS);\n  console.log(data)\n  // should handle loading status\n  if (loading) return <p>Loading...</p>;\n\n  return data.articles.map(   article  => (\n\n\n\n    <div class=\"blog_post margbot50 clearfix\" data-animated=\"fadeInUp\">\n    <div id=\"blog1\" class=\"blog_post_img\">\n      <img id=\"img2\" src=\"img/blog/4.png\" alt=\"\" />\n      <NavLink class=\"zoom\" to={'/detail/'+article.id}></NavLink>\n    </div>\n    <div class=\"blog_post_descr\">\n  <div class=\"blog_post_date\">{(new Date(article.time)).toDateString()+' | '+(new Date(article.time)).toLocaleTimeString()}</div>\n  <NavLink class=\"blog_post_title\"  to={'/detail/'+article.id}>{article.title}</NavLink>\n  \n          <ul class=\"blog_post_info\">\n            <li><a href=\"javascript:void(0);\" >Admin</a></li>\n            <li><a href=\"javascript:void(0);\" >Creative</a></li>\n            <li><a href=\"javascript:void(0);\" >0 Comments</a></li>\n          </ul>\n          <hr/>\n          <div class=\"blog_post_content\">{article.blocks[0].content+\" ... \"}</div>\n          <NavLink class=\"read_more_btn\" to={'/detail/'+article.id}>Read More</NavLink>\n    </div>\n</div>\n\n\n \n  ));\n}\n/*\nconst client = new ApolloClient({\n    uri: 'http://54.197.2.14/graphql/',\n});*/\n\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n        uri: 'https://54.197.2.14:80/graphql/', \n        headers: {'Content-Type': 'application/graphql'},\n        fetchOptions:{method:\"GET\"},\n        }),\n  cache:new InMemoryCache(),\n})\n\n\n\n const App = () => (\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n    <Switch>\n     <Route exact path='/detail/:articleId' component={Detail}/>\n     <Route exact path='/list' component={UserInfo}/>\n   \n        <Redirect to='/list'/>\n     </Switch>\n    </BrowserRouter>\n   \n  \n\n\n  <ul id=\"sahidu\" class=\"pagination clearfix\">\n      <li class=\"active\"><a href=\"javascript:void(0);\" >1</a></li>\n  </ul>\n\n  </ApolloProvider>\n\n);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}